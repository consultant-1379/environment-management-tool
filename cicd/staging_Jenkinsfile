node(params.SLAVE) {
  def remote = [:]
  remote.name = 'staging_vm'
  remote.host = params.STAGING_VM
  remote.user = params.USERNAME
  remote.password = params.PASSWORD
  remote.allowAnyHosts = true

    stage('Pull latest images from artifactory') {
        sshCommand remote: remote, command: "cd environment-management-tool && time docker-compose -f docker-compose-staging.yml pull"
    }
    stage('Update Staging containers') {
        sshCommand remote: remote, command: "cd environment-management-tool && time docker-compose -f docker-compose-staging.yml up -d"
    }
    stage('Remove dangling Docker data') {
        sshCommand remote: remote, command: "docker system prune -f -a"
    }
    stage('Run performance tests') {
        sh "docker run -i --rm -v /root:/bzt-configs -v ${WORKSPACE}/my-run-artifacts:/tmp/artifacts armdocker.rnd.ericsson.se/dockerhub-ericsson-remote/blazemeter/taurus emt_performance_testing/performance_testing.yaml -o modules.jmeter.properties.staging_host=${params.STAGING_VM}"
    }
    stage('User approval') {
        timeout(time: 2, unit: "HOURS") {
            input message: 'Approve Deploy?', ok: 'Yes'
        }
    }
}